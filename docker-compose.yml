# Fichier : docker-compose.yml
version: '3.8'
name: airflow-weather-pipeline

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data

  # Ce service est juste là pour construire notre image personnalisée.111
  custom-airflow-image:
    image: custom-airflow-weather:latest
    build:
      context: .
      dockerfile: Dockerfile.airflow

  # Tous les services suivants utilisent notre image personnalisée.
  airflow-init:
    image: custom-airflow-weather:latest
    container_name: airflow_init
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    command: >
      bash -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"

  airflow-scheduler:
    image: custom-airflow-weather:latest
    container_name: airflow_scheduler
    depends_on:
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: scheduler
    restart: on-failure

  airflow-webserver:
    image: custom-airflow-weather:latest
    container_name: airflow_webserver
    depends_on:
      - airflow-scheduler
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    command: webserver
    restart: on-failure

volumes:
  airflow_postgres_data: