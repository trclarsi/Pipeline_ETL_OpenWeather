# docker-compose.yml - Version Finale avec Correction des Permissions
name: airflow-weather-pipeline

x-airflow-common: &airflow-common
  # On utilise l'image officielle d'Airflow
  image: apache/airflow:2.9.2-python3.11
  environment:
    # --- LA CORRECTION CLÉ ---
    # On spécifie l'ID de l'utilisateur qui doit posséder les dossiers.
    # L'entrypoint de l'image officielle utilisera cette variable.
    - AIRFLOW_UID=50000 
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

services:
  postgres:
    image: postgres:13
    container_name: airflow_postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    depends_on:
      - postgres
    command: >
      bash -c "airflow db migrate && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true"

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    depends_on:
      - airflow-init
    command: airflow scheduler
    restart: on-failure

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    depends_on:
      - airflow-scheduler
    ports:
      - "8080:8080"
    command: airflow webserver
    restart: on-failure

volumes:
  airflow_postgres_data: